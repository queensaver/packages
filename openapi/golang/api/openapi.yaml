openapi: 3.0.0
info:
  description: Queensaver API to send in sensor data and retrieve it. It's also used
    for user management.
  title: Queensaver API
  version: 0.0.1
servers:
- description: Queensaver API Server
  url: https://api.queensaver.com/v1
security:
- cookieAuth: []
paths:
  /user:
    post:
      description: This call creates a user in the queensaver system.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              examples:
                missingData:
                  value: Data is missing.
              schema:
                $ref: '#/components/schemas/errorMessage'
          description: The provided parameters are incorrect
      security: []
      summary: Create a user
  /login:
    post:
      description: This call is meant for interactive web applications. Be aware that
        the server returns a cookie with a 24 hour lifetime.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/login'
        required: true
      responses:
        "200":
          description: Returns a cookie to the browser with the key called 'token'
          headers:
            Set-Cookie:
              explode: false
              schema:
                example: token=abcde12345; Path=/; HttpOnly
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
          description: The provided parameters are incorrect
      security: []
      summary: Authenticate a user against the system.
  /hives:
    delete:
      description: This deletes a hive.
      parameters:
      - description: The UUID of the hive.
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: uuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Returns 200 if the delete was successful
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Delete a Hive
    get:
      description: This returns all hive metadata for the currently logged in user.
      parameters:
      - description: The UUID of the hive. If not set, the request will return all
          hives.
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          type: string
        style: form
      - description: The Unique ID (Mac Address) of the QBox client. If set, the query
          will only return the Hive that sits on the QBox client (or nothing if there
          is no hive associated).
        example: 829898a53801
        explode: true
        in: query
        name: bhive_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/hive'
                type: array
          description: Hives
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Get Hive metadata
    post:
      description: This creates a new hive. A hive is a logical representation of
        a bee hive that can be connected to hardware.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hive'
          description: Returns the created hive
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Create Hive metadata
    put:
      description: This updates new hive.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hive'
          description: Returns the updated hive
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Update Hive metadata
  /bboxes:
    get:
      description: This returns QBox metadata for the logged in user. The request
        needs to present a valid session cookie. There are no query parameters needed
        here, the request will return all known bboxes.
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/bbox'
                type: array
          description: QBox metadata
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Get QBox metadata
  /scale:
    get:
      description: This returns scale values for a certain, defineable date range.
        The request needs to send a cookie along with the request. The cookie is stored
        under the key called "token". Note that this returns the scale data for a
        QBox Client (independent of the beeHive), the API call for an actual beeHive
        is different.
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The Mac Address of the QBox client. You can get all QBox IDs
          and clients with the /config API call.
        example: 829898a53801
        explode: true
        in: query
        name: bhive_id
        required: true
        schema:
          type: string
        style: form
      - description: The Unix Time (epoch) that defines the end time of the scale
          measurements. The beginning is defined by the seconds_in_the_past parameter.
        example: 1639170002
        explode: true
        in: query
        name: epoch
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: How many seconds we go to the past to get the data measurements.
        example: 7200
        explode: true
        in: query
        name: seconds_in_the_past
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/weight'
                type: array
          description: Successfully returned a list of scale measurements
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Get Scale values
components:
  schemas:
    errorMessage:
      description: A text message describing an error
      maxLength: 256
      type: string
    id:
      description: ID of the object. The ID is usually determined by the DBMS.
      example: 15
      minimum: 1
      type: integer
    weight:
      example:
        weight: 53.2345
        epoch: 1639169129
        bhive_id: 829898a53801
      properties:
        bhive_id:
          description: bhive_id to identify the data source. Might become empty in
            a future iteration as it's redundant with the query parameter.
          example: 829898a53801
          type: string
        weight:
          description: actual measurement of weight
          example: 53.2345
          format: float
          type: number
        epoch:
          description: timestamp of the measurement on one second precision
          example: 1639169129
          format: int64
          type: integer
      type: object
    login:
      properties:
        username:
          description: Username, must be unique to the queensaver system. We encourage
            using email-addresses here.
          example: jon@doe.com
          maxLength: 256
          type: string
        password:
          description: Password
          example: trustno1
          format: password
          type: string
      required:
      - password
      - username
      type: object
    bhive:
      properties:
        bhive_id:
          description: The ID of a beehive. Is unique for that user.
          example: 829898a53801
          maxLength: 256
          type: string
      type: object
    hive:
      example:
        httpReponseCode: 409
        public: true
        frames: 3
        bhiveId: 829898a53801
        name: B25
        format: Dadant
        comment: This hive needs to be replaced next year
        uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        capacity: 10
      properties:
        name:
          description: Name of the hive. Can be chosen by the user.
          example: B25
          type: string
          x-protobuf-index: 1
        public:
          description: If the hive can be viewed by other users in the queensaver
            system
          example: true
          type: boolean
          x-protobuf-index: 2
        uuid:
          description: Unique Identifier for this hive
          example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          type: string
          x-protobuf-index: 7
        comment:
          description: Random note or user comment
          example: This hive needs to be replaced next year
          type: string
          x-protobuf-index: 3
        capacity:
          description: How many honeycombs a frame can load
          example: 10
          maximum: 50
          minimum: 1
          type: integer
          x-protobuf-index: 4
        format:
          description: The format of the frame
          enum:
          - Zander
          - Dadant
          example: Dadant
          type: string
          x-protobuf-index: 5
        frames:
          description: The number of frames the bee hive has
          example: 3
          type: integer
          x-protobuf-index: 6
        bhiveId:
          description: The ID of beehive electronics (QBox client).
          example: 829898a53801
          maxLength: 256
          type: string
          x-protobuf-index: 8
        httpReponseCode:
          description: HTTP response code. Used for internal purposes, will be let
            out at the API level.
          example: 409
          type: integer
          x-protobuf-index: 9
      type: object
    bbox:
      example:
        bbox_id: 15
        schedule: 03 6,12,16,20 * * *
        bhive:
        - bhive_id: 829898a53801
        - bhive_id: 829898a53801
      properties:
        bbox_id:
          description: ID of the object. The ID is usually determined by the DBMS.
          example: 15
          minimum: 1
          type: integer
        schedule:
          description: A cron type of description of when the sensore measurements
            are supposed to be done.
          example: 03 6,12,16,20 * * *
          maxLength: 256
          type: string
        bhive:
          items:
            $ref: '#/components/schemas/bbox_bhive'
          type: array
      type: object
    user:
      properties:
        username:
          description: Username, must be unique to the queensaver system. We encourage
            using email-addresses here.
          example: jon@doe.com
          maxLength: 256
          type: string
        password:
          description: Password
          format: password
          type: string
        firstName:
          description: First name of the user
          example: Hans
          maxLength: 256
          type: string
        lastName:
          description: Last name of the user
          example: Ecker
          maxLength: 256
          type: string
      required:
      - firstName
      - lastName
      - password
      - username
      type: object
    bbox_bhive:
      example:
        bhive_id: 829898a53801
      properties:
        bhive_id:
          description: The ID of a beehive. Is unique for that user.
          example: 829898a53801
          maxLength: 256
          type: string
      type: object
  securitySchemes:
    cookieAuth:
      in: cookie
      name: token
      type: apiKey
