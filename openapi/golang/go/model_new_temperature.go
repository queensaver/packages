/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type NewTemperature struct {

	// the internal user id of the authenticated user. Will be set internally in the cloud system and does not have an effect if set via the API call as it will be overridden. Don't set this value.
	UserId float32 `json:"userId,omitempty"`

	Temperature Temperature `json:"temperature,omitempty"`
}

// AssertNewTemperatureRequired checks if the required fields are not zero-ed
func AssertNewTemperatureRequired(obj NewTemperature) error {
	if err := AssertTemperatureRequired(obj.Temperature); err != nil {
		return err
	}
	return nil
}

// AssertRecurseNewTemperatureRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of NewTemperature (e.g. [][]NewTemperature), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseNewTemperatureRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aNewTemperature, ok := obj.(NewTemperature)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertNewTemperatureRequired(aNewTemperature)
	})
}
