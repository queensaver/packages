/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GetTemperature struct {

	// the internal user id of the authenticated user. Will be set internally in the cloud system and does not have an effect if set via the API call as it will be overridden. Don't set this value.
	UserId float32 `json:"userId,omitempty"`

	Temperatures []Temperature `json:"temperatures,omitempty"`

	// error
	Error string `json:"error,omitempty"`

	// HTTP response code. Used for internal purposes, will be sent out at the API.
	HttpReponseCode int32 `json:"httpReponseCode,omitempty"`
}

// AssertGetTemperatureRequired checks if the required fields are not zero-ed
func AssertGetTemperatureRequired(obj GetTemperature) error {
	for _, el := range obj.Temperatures {
		if err := AssertTemperatureRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseGetTemperatureRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GetTemperature (e.g. [][]GetTemperature), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGetTemperatureRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGetTemperature, ok := obj.(GetTemperature)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGetTemperatureRequired(aGetTemperature)
	})
}
