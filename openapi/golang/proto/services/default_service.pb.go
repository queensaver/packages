//
//Queensaver API
//
//Queensaver API to send in sensor data and retrieve it. It's also used for user management.
//
//The version of the OpenAPI document: 0.0.1
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: services/default_service.proto

package services

import (
	models "github.com/queensaver/packages/openapi/golang/proto/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of models/bbox.proto.

type Bbox = models.Bbox

// Symbols defined in public import of models/get_temperature.proto.

type GetTemperature = models.GetTemperature

// Symbols defined in public import of models/hive.proto.

type Hive_FormatEnum = models.Hive_FormatEnum

const Hive_FormatEnum_ZANDER = models.Hive_FormatEnum_ZANDER
const Hive_FormatEnum_DADANT = models.Hive_FormatEnum_DADANT

var Hive_FormatEnum_name = models.Hive_FormatEnum_name
var Hive_FormatEnum_value = models.Hive_FormatEnum_value

type Hive = models.Hive

// Symbols defined in public import of models/new_temperature.proto.

type NewTemperature = models.NewTemperature

// Symbols defined in public import of models/user.proto.

type User = models.User

// Symbols defined in public import of models/varroa_scan.proto.

type VarroaScan = models.VarroaScan

// Symbols defined in public import of models/weight.proto.

type Weight = models.Weight

type BboxesGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*models.Bbox `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BboxesGetResponse) Reset() {
	*x = BboxesGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BboxesGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BboxesGetResponse) ProtoMessage() {}

func (x *BboxesGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BboxesGetResponse.ProtoReflect.Descriptor instead.
func (*BboxesGetResponse) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{0}
}

func (x *BboxesGetResponse) GetData() []*models.Bbox {
	if x != nil {
		return x.Data
	}
	return nil
}

type HivesDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The UUID of the hive.
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *HivesDeleteRequest) Reset() {
	*x = HivesDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HivesDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HivesDeleteRequest) ProtoMessage() {}

func (x *HivesDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HivesDeleteRequest.ProtoReflect.Descriptor instead.
func (*HivesDeleteRequest) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{1}
}

func (x *HivesDeleteRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type HivesGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The UUID of the hive. If not set, the request will return all hives.
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// The Unique ID (Mac Address) of the QBox client. If set, the query will only return the Hive that sits on the QBox client (or nothing if there is no hive associated).
	BhiveId string `protobuf:"bytes,2,opt,name=bhiveId,proto3" json:"bhiveId,omitempty"`
}

func (x *HivesGetRequest) Reset() {
	*x = HivesGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HivesGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HivesGetRequest) ProtoMessage() {}

func (x *HivesGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HivesGetRequest.ProtoReflect.Descriptor instead.
func (*HivesGetRequest) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{2}
}

func (x *HivesGetRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *HivesGetRequest) GetBhiveId() string {
	if x != nil {
		return x.BhiveId
	}
	return ""
}

type HivesGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*models.Hive `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *HivesGetResponse) Reset() {
	*x = HivesGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HivesGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HivesGetResponse) ProtoMessage() {}

func (x *HivesGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HivesGetResponse.ProtoReflect.Descriptor instead.
func (*HivesGetResponse) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{3}
}

func (x *HivesGetResponse) GetData() []*models.Hive {
	if x != nil {
		return x.Data
	}
	return nil
}

type HivesPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hive *models.Hive `protobuf:"bytes,1,opt,name=hive,proto3" json:"hive,omitempty"`
}

func (x *HivesPostRequest) Reset() {
	*x = HivesPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HivesPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HivesPostRequest) ProtoMessage() {}

func (x *HivesPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HivesPostRequest.ProtoReflect.Descriptor instead.
func (*HivesPostRequest) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{4}
}

func (x *HivesPostRequest) GetHive() *models.Hive {
	if x != nil {
		return x.Hive
	}
	return nil
}

type HivesPutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hive *models.Hive `protobuf:"bytes,1,opt,name=hive,proto3" json:"hive,omitempty"`
}

func (x *HivesPutRequest) Reset() {
	*x = HivesPutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HivesPutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HivesPutRequest) ProtoMessage() {}

func (x *HivesPutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HivesPutRequest.ProtoReflect.Descriptor instead.
func (*HivesPutRequest) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{5}
}

func (x *HivesPutRequest) GetHive() *models.Hive {
	if x != nil {
		return x.Hive
	}
	return nil
}

type LoginPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Username, must be unique to the queensaver system. We encourage using email-addresses here.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Password
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginPostRequest) Reset() {
	*x = LoginPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginPostRequest) ProtoMessage() {}

func (x *LoginPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginPostRequest.ProtoReflect.Descriptor instead.
func (*LoginPostRequest) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{6}
}

func (x *LoginPostRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginPostRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ScaleGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Either the cookie or this Q-Token must be set to be authorized for the API call.
	QToken string `protobuf:"bytes,1,opt,name=qToken,proto3" json:"qToken,omitempty"`
	// The Mac Address of the QBox client. You can get all QBox IDs and clients with the /config API call.
	BhiveId string `protobuf:"bytes,2,opt,name=bhiveId,proto3" json:"bhiveId,omitempty"`
	// The Unix Time (epoch) that defines the end time of the scale measurements. The beginning is defined by the secondsInThePast parameter.
	Epoch int64 `protobuf:"varint,3,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// How many seconds we go to the past to get the data measurements.
	SecondsInThePast int64 `protobuf:"varint,4,opt,name=secondsInThePast,proto3" json:"secondsInThePast,omitempty"`
	// Either this cookie or the Q-Token must be set to be authorized for the API call.
	Token string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ScaleGetRequest) Reset() {
	*x = ScaleGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleGetRequest) ProtoMessage() {}

func (x *ScaleGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleGetRequest.ProtoReflect.Descriptor instead.
func (*ScaleGetRequest) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{7}
}

func (x *ScaleGetRequest) GetQToken() string {
	if x != nil {
		return x.QToken
	}
	return ""
}

func (x *ScaleGetRequest) GetBhiveId() string {
	if x != nil {
		return x.BhiveId
	}
	return ""
}

func (x *ScaleGetRequest) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *ScaleGetRequest) GetSecondsInThePast() int64 {
	if x != nil {
		return x.SecondsInThePast
	}
	return 0
}

func (x *ScaleGetRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ScaleGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*models.Weight `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ScaleGetResponse) Reset() {
	*x = ScaleGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleGetResponse) ProtoMessage() {}

func (x *ScaleGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleGetResponse.ProtoReflect.Descriptor instead.
func (*ScaleGetResponse) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{8}
}

func (x *ScaleGetResponse) GetData() []*models.Weight {
	if x != nil {
		return x.Data
	}
	return nil
}

type TemperatureGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Either the cookie or this Q-Token must be set to be authorized for the API call.
	QToken string `protobuf:"bytes,1,opt,name=qToken,proto3" json:"qToken,omitempty"`
	// The Mac Address of the QBox client. You can get all QBox IDs and clients with the /config API call.
	BhiveId string `protobuf:"bytes,2,opt,name=bhiveId,proto3" json:"bhiveId,omitempty"`
	// The Unix Time (epoch) that defines the end time of the scale measurements. The beginning is defined by the secondsInThePast parameter.
	Epoch int64 `protobuf:"varint,3,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// How many seconds we go to the past to get the data measurements.
	SecondsInThePast int64 `protobuf:"varint,4,opt,name=secondsInThePast,proto3" json:"secondsInThePast,omitempty"`
	// Either this cookie or the Q-Token must be set to be authorized for the API call.
	Token string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TemperatureGetRequest) Reset() {
	*x = TemperatureGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemperatureGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperatureGetRequest) ProtoMessage() {}

func (x *TemperatureGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperatureGetRequest.ProtoReflect.Descriptor instead.
func (*TemperatureGetRequest) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{9}
}

func (x *TemperatureGetRequest) GetQToken() string {
	if x != nil {
		return x.QToken
	}
	return ""
}

func (x *TemperatureGetRequest) GetBhiveId() string {
	if x != nil {
		return x.BhiveId
	}
	return ""
}

func (x *TemperatureGetRequest) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *TemperatureGetRequest) GetSecondsInThePast() int64 {
	if x != nil {
		return x.SecondsInThePast
	}
	return 0
}

func (x *TemperatureGetRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type TemperatureGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*models.GetTemperature `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TemperatureGetResponse) Reset() {
	*x = TemperatureGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemperatureGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperatureGetResponse) ProtoMessage() {}

func (x *TemperatureGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperatureGetResponse.ProtoReflect.Descriptor instead.
func (*TemperatureGetResponse) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{10}
}

func (x *TemperatureGetResponse) GetData() []*models.GetTemperature {
	if x != nil {
		return x.Data
	}
	return nil
}

type TemperaturePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewTemperature *models.NewTemperature `protobuf:"bytes,1,opt,name=newTemperature,proto3" json:"newTemperature,omitempty"`
}

func (x *TemperaturePostRequest) Reset() {
	*x = TemperaturePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemperaturePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperaturePostRequest) ProtoMessage() {}

func (x *TemperaturePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperaturePostRequest.ProtoReflect.Descriptor instead.
func (*TemperaturePostRequest) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{11}
}

func (x *TemperaturePostRequest) GetNewTemperature() *models.NewTemperature {
	if x != nil {
		return x.NewTemperature
	}
	return nil
}

type UserPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *models.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserPostRequest) Reset() {
	*x = UserPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPostRequest) ProtoMessage() {}

func (x *UserPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPostRequest.ProtoReflect.Descriptor instead.
func (*UserPostRequest) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{12}
}

func (x *UserPostRequest) GetUser() *models.User {
	if x != nil {
		return x.User
	}
	return nil
}

type VarroaScanGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Either the cookie or this Q-Token must be set to be authorized for the API call.
	QToken string `protobuf:"bytes,1,opt,name=qToken,proto3" json:"qToken,omitempty"`
	// The Mac Address of the QBox client. You can get all QBox IDs and clients with the /config API call.
	BhiveId string `protobuf:"bytes,2,opt,name=bhiveId,proto3" json:"bhiveId,omitempty"`
	// Either this cookie or the Q-Token must be set to be authorized for the API call.
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	// The Unix Time (epoch) that defines the end time of the varroa images. The beginning is defined by the secondsInThePast parameter.
	Epoch int64 `protobuf:"varint,4,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// The UUID of the varra-scan. If not set, the request will return scans in the given time range. If this parameter is given we ignore all time ranges.
	Uuid string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// How many seconds we go to the past to get the data measurements.
	SecondsInThePast int64 `protobuf:"varint,6,opt,name=secondsInThePast,proto3" json:"secondsInThePast,omitempty"`
}

func (x *VarroaScanGetRequest) Reset() {
	*x = VarroaScanGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarroaScanGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarroaScanGetRequest) ProtoMessage() {}

func (x *VarroaScanGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarroaScanGetRequest.ProtoReflect.Descriptor instead.
func (*VarroaScanGetRequest) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{13}
}

func (x *VarroaScanGetRequest) GetQToken() string {
	if x != nil {
		return x.QToken
	}
	return ""
}

func (x *VarroaScanGetRequest) GetBhiveId() string {
	if x != nil {
		return x.BhiveId
	}
	return ""
}

func (x *VarroaScanGetRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VarroaScanGetRequest) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *VarroaScanGetRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *VarroaScanGetRequest) GetSecondsInThePast() int64 {
	if x != nil {
		return x.SecondsInThePast
	}
	return 0
}

type VarroaScanGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*models.VarroaScan `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *VarroaScanGetResponse) Reset() {
	*x = VarroaScanGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_default_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarroaScanGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarroaScanGetResponse) ProtoMessage() {}

func (x *VarroaScanGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_default_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarroaScanGetResponse.ProtoReflect.Descriptor instead.
func (*VarroaScanGetResponse) Descriptor() ([]byte, []int) {
	return file_services_default_service_proto_rawDescGZIP(), []int{14}
}

func (x *VarroaScanGetResponse) GetData() []*models.VarroaScan {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_services_default_service_proto protoreflect.FileDescriptor

var file_services_default_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x62, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6e, 0x65, 0x77, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x61, 0x72, 0x72,
	0x6f, 0x61, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x36, 0x0a, 0x11, 0x42, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x42, 0x62, 0x6f, 0x78, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x28, 0x0a, 0x12, 0x48, 0x69,
	0x76, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x0f, 0x48, 0x69, 0x76, 0x65, 0x73, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x68, 0x69, 0x76, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x68,
	0x69, 0x76, 0x65, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x10, 0x48, 0x69, 0x76, 0x65, 0x73, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x10,
	0x48, 0x69, 0x76, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x04, 0x68, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x52, 0x04, 0x68,
	0x69, 0x76, 0x65, 0x22, 0x34, 0x0a, 0x0f, 0x48, 0x69, 0x76, 0x65, 0x73, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x68, 0x69, 0x76, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x69, 0x76, 0x65, 0x52, 0x04, 0x68, 0x69, 0x76, 0x65, 0x22, 0x4a, 0x0a, 0x10, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x68, 0x69, 0x76, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x68, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x54, 0x68,
	0x65, 0x50, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x54, 0x68, 0x65, 0x50, 0x61, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x37, 0x0a, 0x10, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a,
	0x15, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x68, 0x69, 0x76, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x68, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x2a,
	0x0a, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x54, 0x68, 0x65, 0x50, 0x61,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x49, 0x6e, 0x54, 0x68, 0x65, 0x50, 0x61, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x45, 0x0a, 0x16, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x16, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x34, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xb4, 0x01, 0x0a, 0x14, 0x56, 0x61, 0x72,
	0x72, 0x6f, 0x61, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x71, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x68, 0x69,
	0x76, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x68, 0x69, 0x76,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x49, 0x6e,
	0x54, 0x68, 0x65, 0x50, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x54, 0x68, 0x65, 0x50, 0x61, 0x73, 0x74, 0x22,
	0x40, 0x0a, 0x15, 0x56, 0x61, 0x72, 0x72, 0x6f, 0x61, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x56, 0x61, 0x72, 0x72, 0x6f, 0x61, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x32, 0xd9, 0x08, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x09, 0x42, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x47, 0x65,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x62, 0x6f, 0x78,
	0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a,
	0x0b, 0x48, 0x69, 0x76, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48,
	0x69, 0x76, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6f, 0x0a, 0x08, 0x48, 0x69, 0x76,
	0x65, 0x73, 0x47, 0x65, 0x74, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x73, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x73, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x48, 0x69,
	0x76, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x73, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x48, 0x69, 0x76,
	0x65, 0x73, 0x50, 0x75, 0x74, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x73, 0x50, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6f,
	0x0a, 0x08, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x81, 0x01, 0x0a, 0x0e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47,
	0x65, 0x74, 0x12, 0x36, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x37, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x7e, 0x0a,
	0x0d, 0x56, 0x61, 0x72, 0x72, 0x6f, 0x61, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x35,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x56, 0x61, 0x72, 0x72, 0x6f, 0x61, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x72, 0x6f, 0x61, 0x53, 0x63,
	0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x01, 0x50,
	0x02, 0x50, 0x03, 0x50, 0x04, 0x50, 0x05, 0x50, 0x06, 0x50, 0x07, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_services_default_service_proto_rawDescOnce sync.Once
	file_services_default_service_proto_rawDescData = file_services_default_service_proto_rawDesc
)

func file_services_default_service_proto_rawDescGZIP() []byte {
	file_services_default_service_proto_rawDescOnce.Do(func() {
		file_services_default_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_default_service_proto_rawDescData)
	})
	return file_services_default_service_proto_rawDescData
}

var file_services_default_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_services_default_service_proto_goTypes = []interface{}{
	(*BboxesGetResponse)(nil),      // 0: openapi.services.defaultservice.BboxesGetResponse
	(*HivesDeleteRequest)(nil),     // 1: openapi.services.defaultservice.HivesDeleteRequest
	(*HivesGetRequest)(nil),        // 2: openapi.services.defaultservice.HivesGetRequest
	(*HivesGetResponse)(nil),       // 3: openapi.services.defaultservice.HivesGetResponse
	(*HivesPostRequest)(nil),       // 4: openapi.services.defaultservice.HivesPostRequest
	(*HivesPutRequest)(nil),        // 5: openapi.services.defaultservice.HivesPutRequest
	(*LoginPostRequest)(nil),       // 6: openapi.services.defaultservice.LoginPostRequest
	(*ScaleGetRequest)(nil),        // 7: openapi.services.defaultservice.ScaleGetRequest
	(*ScaleGetResponse)(nil),       // 8: openapi.services.defaultservice.ScaleGetResponse
	(*TemperatureGetRequest)(nil),  // 9: openapi.services.defaultservice.TemperatureGetRequest
	(*TemperatureGetResponse)(nil), // 10: openapi.services.defaultservice.TemperatureGetResponse
	(*TemperaturePostRequest)(nil), // 11: openapi.services.defaultservice.TemperaturePostRequest
	(*UserPostRequest)(nil),        // 12: openapi.services.defaultservice.UserPostRequest
	(*VarroaScanGetRequest)(nil),   // 13: openapi.services.defaultservice.VarroaScanGetRequest
	(*VarroaScanGetResponse)(nil),  // 14: openapi.services.defaultservice.VarroaScanGetResponse
	(*models.Bbox)(nil),            // 15: openapi.Bbox
	(*models.Hive)(nil),            // 16: openapi.Hive
	(*models.Weight)(nil),          // 17: openapi.Weight
	(*models.GetTemperature)(nil),  // 18: openapi.GetTemperature
	(*models.NewTemperature)(nil),  // 19: openapi.NewTemperature
	(*models.User)(nil),            // 20: openapi.User
	(*models.VarroaScan)(nil),      // 21: openapi.VarroaScan
	(*emptypb.Empty)(nil),          // 22: google.protobuf.Empty
}
var file_services_default_service_proto_depIdxs = []int32{
	15, // 0: openapi.services.defaultservice.BboxesGetResponse.data:type_name -> openapi.Bbox
	16, // 1: openapi.services.defaultservice.HivesGetResponse.data:type_name -> openapi.Hive
	16, // 2: openapi.services.defaultservice.HivesPostRequest.hive:type_name -> openapi.Hive
	16, // 3: openapi.services.defaultservice.HivesPutRequest.hive:type_name -> openapi.Hive
	17, // 4: openapi.services.defaultservice.ScaleGetResponse.data:type_name -> openapi.Weight
	18, // 5: openapi.services.defaultservice.TemperatureGetResponse.data:type_name -> openapi.GetTemperature
	19, // 6: openapi.services.defaultservice.TemperaturePostRequest.newTemperature:type_name -> openapi.NewTemperature
	20, // 7: openapi.services.defaultservice.UserPostRequest.user:type_name -> openapi.User
	21, // 8: openapi.services.defaultservice.VarroaScanGetResponse.data:type_name -> openapi.VarroaScan
	22, // 9: openapi.services.defaultservice.DefaultService.BboxesGet:input_type -> google.protobuf.Empty
	1,  // 10: openapi.services.defaultservice.DefaultService.HivesDelete:input_type -> openapi.services.defaultservice.HivesDeleteRequest
	2,  // 11: openapi.services.defaultservice.DefaultService.HivesGet:input_type -> openapi.services.defaultservice.HivesGetRequest
	4,  // 12: openapi.services.defaultservice.DefaultService.HivesPost:input_type -> openapi.services.defaultservice.HivesPostRequest
	5,  // 13: openapi.services.defaultservice.DefaultService.HivesPut:input_type -> openapi.services.defaultservice.HivesPutRequest
	6,  // 14: openapi.services.defaultservice.DefaultService.LoginPost:input_type -> openapi.services.defaultservice.LoginPostRequest
	7,  // 15: openapi.services.defaultservice.DefaultService.ScaleGet:input_type -> openapi.services.defaultservice.ScaleGetRequest
	9,  // 16: openapi.services.defaultservice.DefaultService.TemperatureGet:input_type -> openapi.services.defaultservice.TemperatureGetRequest
	11, // 17: openapi.services.defaultservice.DefaultService.TemperaturePost:input_type -> openapi.services.defaultservice.TemperaturePostRequest
	12, // 18: openapi.services.defaultservice.DefaultService.UserPost:input_type -> openapi.services.defaultservice.UserPostRequest
	13, // 19: openapi.services.defaultservice.DefaultService.VarroaScanGet:input_type -> openapi.services.defaultservice.VarroaScanGetRequest
	0,  // 20: openapi.services.defaultservice.DefaultService.BboxesGet:output_type -> openapi.services.defaultservice.BboxesGetResponse
	22, // 21: openapi.services.defaultservice.DefaultService.HivesDelete:output_type -> google.protobuf.Empty
	3,  // 22: openapi.services.defaultservice.DefaultService.HivesGet:output_type -> openapi.services.defaultservice.HivesGetResponse
	16, // 23: openapi.services.defaultservice.DefaultService.HivesPost:output_type -> openapi.Hive
	16, // 24: openapi.services.defaultservice.DefaultService.HivesPut:output_type -> openapi.Hive
	22, // 25: openapi.services.defaultservice.DefaultService.LoginPost:output_type -> google.protobuf.Empty
	8,  // 26: openapi.services.defaultservice.DefaultService.ScaleGet:output_type -> openapi.services.defaultservice.ScaleGetResponse
	10, // 27: openapi.services.defaultservice.DefaultService.TemperatureGet:output_type -> openapi.services.defaultservice.TemperatureGetResponse
	22, // 28: openapi.services.defaultservice.DefaultService.TemperaturePost:output_type -> google.protobuf.Empty
	22, // 29: openapi.services.defaultservice.DefaultService.UserPost:output_type -> google.protobuf.Empty
	14, // 30: openapi.services.defaultservice.DefaultService.VarroaScanGet:output_type -> openapi.services.defaultservice.VarroaScanGetResponse
	20, // [20:31] is the sub-list for method output_type
	9,  // [9:20] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_services_default_service_proto_init() }
func file_services_default_service_proto_init() {
	if File_services_default_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_default_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BboxesGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HivesDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HivesGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HivesGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HivesPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HivesPutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemperatureGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemperatureGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemperaturePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarroaScanGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_default_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarroaScanGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_default_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_default_service_proto_goTypes,
		DependencyIndexes: file_services_default_service_proto_depIdxs,
		MessageInfos:      file_services_default_service_proto_msgTypes,
	}.Build()
	File_services_default_service_proto = out.File
	file_services_default_service_proto_rawDesc = nil
	file_services_default_service_proto_goTypes = nil
	file_services_default_service_proto_depIdxs = nil
}
