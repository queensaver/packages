openapi: 3.0.0
info:
  title: Queensaver API
  version: 0.0.1
  description: Queensaver API to send in sensor data and retrieve it. It's also used for user management.

servers:
- url: https://api.queensaver.com/v1
  description: Queensaver API Server

security:
- cookieAuth: []

paths: 
  /user:
    post:
      summary: Create a user 
      description: This call creates a user in the queensaver system.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
      responses:
        "200":
          description: "OK"
        "400":
          description: The provided parameters are incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
              examples:
                missingData:
                  value: "Data is missing."

  /login:
    post:
      summary: Authenticate a user against the system.
      description: This call is meant for interactive web applications. Be aware that the server returns a cookie with a 24 hour lifetime. 
      security: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/login"
      responses:
        "200":
          description: "Returns a cookie to the browser with the key called 'token'"
          headers:
            "Set-Cookie":
              schema:
                type: string
                example: token=abcde12345; Path=/; HttpOnly

        "400":
          description: The provided parameters are incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"


  /scale:
    get:
      summary: Get Scale values 
      description: This returns scale values for a certain, defineable date range. The request needs to send a cookie along with the request. The cookie is stored under the key called "token". Note that this returns the scale data for a QBox Client (independent of the beeHive), the API call for an actual beeHive is different.
      # operationId: getScaleValues
      security:
      - cookieAuth: []

      parameters:
      - in: header
        name: Q-Token
        description: Either the cookie or this Q-Token must be set to be authorized for the API call.
        schema:
          type: string
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        required: true
      - in: cookie
        name: token
        description: Either this cookie or the Q-Token must be set to be authorized for the API call.
        schema:
          type: string
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
      - name: bhive_id
        in: query
        description: The Mac Address of the QBox client. You can get all QBox IDs and clients with the /config API call.
        required: true
        example: 829898a53801
        schema:
          type: string
      - name: epoch
        in: query
        description: The Unix Time (epoch) that defines the end time of the scale measurements. The beginning is defined by the seconds_in_the_past parameter.
        example: 1639170002
        required: true
        schema:
          type: integer
          format: int64
      - name: seconds_in_the_past
        in: query
        description: How many seconds we go to the past to get the data measurements. 
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Successfully returned a list of scale measurements"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/weight"

        "400":
          description: Generic error
        "500":
          description: Internal error



components:

  securitySchemes:
    cookieAuth:  # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: token # cookie name

#  parameters:
#    rowParam:
#      description: Board row (vertical coordinate)
#      name: row
#      in: path
#      required: true
#      schema:
#        $ref: "#/components/schemas/coordinate"
#    columnParam:
#      description: Board column (horizontal coordinate)
#      name: column
#      in: path
#      required: true
#      schema:
#        $ref: "#/components/schemas/coordinate"
  schemas:
    errorMessage:
      type: string
      maxLength: 256
      description: A text message describing an error
#    board:
#      type: array
#      maxItems: 3
#      minItems: 3
#      items:
#        type: array
#        maxItems: 3
#        minItems: 3
#        items:
#          $ref: "#/components/schemas/mark"
#    id:
#      type: integer
#      minimum: 1
#      example: 15
#      description: ID of the object. The ID is usually determined by the DBMS.

    weight:
      type: object
      properties:
        bhive_id:
          type: string
          description: bhive_id to identify the data source. Might become empty in a future iteration as it's redundant with the query parameter.
          example: "829898a53801"
        weight:
          type: number
          format: float
          description: actual measurement of weight
          example: 53.2345
        epoch:
          type: integer
          format: int64
          description: timestamp of the measurement on one second precision
          example: 1639169129

    login:
      type: object
      properties:
        username:
          type: string
          maxLength: 256
          description: Username, must be unique to the queensaver system. We encourage using email-addresses here.
          example: jon@doe.com
        password:
          type: string
          format: password
          description: Password
          example: trustno1

    user:
      type: object
      properties:
        #id:
        #  $ref: "#/components/schemas/id"
        username:
          type: string
          maxLength: 256
          description: Username, must be unique to the queensaver system. We encourage using email-addresses here.
          example: jon@doe.com
        password:
          type: string
          format: password
          description: Password
        firstName:
          type: string
          maxLength: 256
          description: First name of the user
          example: Hans
        lastName:
          type: string
          maxLength: 256
          description: Last name of the user
          example: Ecker
