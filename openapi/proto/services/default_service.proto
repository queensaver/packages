/*
  Queensaver API

  Queensaver API to send in sensor data and retrieve it. It's also used for user management.

  The version of the OpenAPI document: 0.0.1

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapi.services.defaultservice;

import "google/protobuf/empty.proto";
import public "models/bbox.proto";
import public "models/get_temperature.proto";
import public "models/hive.proto";
import public "models/new_temperature.proto";
import public "models/user.proto";
import public "models/varroa_scan.proto";
import public "models/weight.proto";

service DefaultService {
  rpc BboxesGet (google.protobuf.Empty) returns (BboxesGetResponse);

  rpc HivesDelete (HivesDeleteRequest) returns (google.protobuf.Empty);

  rpc HivesGet (HivesGetRequest) returns (HivesGetResponse);

  rpc HivesPost (HivesPostRequest) returns (Hive);

  rpc HivesPut (HivesPutRequest) returns (Hive);

  rpc LoginPost (LoginPostRequest) returns (google.protobuf.Empty);

  rpc ScaleGet (ScaleGetRequest) returns (ScaleGetResponse);

  rpc TemperatureGet (TemperatureGetRequest) returns (TemperatureGetResponse);

  rpc TemperaturePost (TemperaturePostRequest) returns (google.protobuf.Empty);

  rpc UserPost (UserPostRequest) returns (google.protobuf.Empty);

  rpc VarroaScanGet (VarroaScanGetRequest) returns (VarroaScanGetResponse);

}

message BboxesGetResponse {
  repeated Bbox data = 1;
}

message HivesDeleteRequest {
  // The UUID of the hive.
  string uuid = 1;

}

message HivesGetRequest {
  // The UUID of the hive. If not set, the request will return all hives.
  string uuid = 1;
  // The Unique ID (Mac Address) of the QBox client. If set, the query will only return the Hive that sits on the QBox client (or nothing if there is no hive associated).
  string bhiveId = 2;

}

message HivesGetResponse {
  repeated Hive data = 1;
}

message HivesPostRequest {
  Hive hive = 1;

}

message HivesPutRequest {
  Hive hive = 1;

}

message LoginPostRequest {
  // Username, must be unique to the queensaver system. We encourage using email-addresses here.
  string username = 1;
  // Password
  string password = 2;

}

message ScaleGetRequest {
  // Either the cookie or this Q-Token must be set to be authorized for the API call.
  string qToken = 1;
  // The Mac Address of the QBox client. You can get all QBox IDs and clients with the /config API call.
  string bhiveId = 2;
  // The Unix Time (epoch) that defines the end time of the scale measurements. The beginning is defined by the secondsInThePast parameter.
  int64 epoch = 3;
  // How many seconds we go to the past to get the data measurements.
  int64 secondsInThePast = 4;
  // Either this cookie or the Q-Token must be set to be authorized for the API call.
  string token = 5;

}

message ScaleGetResponse {
  repeated Weight data = 1;
}

message TemperatureGetRequest {
  // Either the cookie or this Q-Token must be set to be authorized for the API call.
  string qToken = 1;
  // The Mac Address of the QBox client. You can get all QBox IDs and clients with the /config API call.
  string bhiveId = 2;
  // The Unix Time (epoch) that defines the end time of the scale measurements. The beginning is defined by the secondsInThePast parameter.
  int64 epoch = 3;
  // How many seconds we go to the past to get the data measurements.
  int64 secondsInThePast = 4;
  // Either this cookie or the Q-Token must be set to be authorized for the API call.
  string token = 5;

}

message TemperatureGetResponse {
  repeated GetTemperature data = 1;
}

message TemperaturePostRequest {
  NewTemperature newTemperature = 1;

}

message UserPostRequest {
  User user = 1;

}

message VarroaScanGetRequest {
  // Either the cookie or this Q-Token must be set to be authorized for the API call.
  string qToken = 1;
  // The Mac Address of the QBox client. You can get all QBox IDs and clients with the /config API call.
  string bhiveId = 2;
  // Either this cookie or the Q-Token must be set to be authorized for the API call.
  string token = 3;
  // The Unix Time (epoch) that defines the end time of the varroa images. The beginning is defined by the secondsInThePast parameter.
  int64 epoch = 4;
  // The UUID of the varra-scan. If not set, the request will return scans in the given time range. If this parameter is given we ignore all time ranges.
  string uuid = 5;
  // How many seconds we go to the past to get the data measurements.
  int64 secondsInThePast = 6;

}

message VarroaScanGetResponse {
  repeated VarroaScan data = 1;
}

